[{"/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/App.js":"1","/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/JobApplication/JobApplicationDetail.js":"2","/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/Login/Login.js":"3","/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/JobApplication/JobApplication.js":"4","/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/FollowUp/FollowUp.js":"5","/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/JobApplication/JobApplications.js":"6","/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/Navbar/Navbar.js":"7","/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/Calendar/Calendar.js":"8","/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/index.js":"9","/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/JobApplicationAdd/JobApplicationAdd.js":"10","/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/Interview/Interview.js":"11"},{"size":5291,"mtime":1620353934442,"results":"12","hashOfConfig":"13"},{"size":12081,"mtime":1620352195361,"results":"14","hashOfConfig":"13"},{"size":3445,"mtime":1607567821033,"results":"15","hashOfConfig":"13"},{"size":2305,"mtime":1618183981991,"results":"16","hashOfConfig":"13"},{"size":7925,"mtime":1620352959759,"results":"17","hashOfConfig":"13"},{"size":2222,"mtime":1620353786232,"results":"18","hashOfConfig":"13"},{"size":4155,"mtime":1607565020599,"results":"19","hashOfConfig":"13"},{"size":3331,"mtime":1620246322413,"results":"20","hashOfConfig":"13"},{"size":477,"mtime":1607567578108,"results":"21","hashOfConfig":"13"},{"size":19217,"mtime":1620351962731,"results":"22","hashOfConfig":"13"},{"size":6880,"mtime":1620350408520,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15lywka",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},"/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/App.js",[],"/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/JobApplication/JobApplicationDetail.js",["50"],"import React, { useState } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\nimport FollowUp from '../FollowUp/FollowUp';\nimport Interview from '../Interview/Interview'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n// import Button from '@material-ui/core/Button';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CancelIcon from '@material-ui/icons/Cancel';\n// import Fab from '@material-ui/core/Fab';\n// import AddIcon from '@material-ui/icons/Add';\n// import SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        boxShadow: \"none\",\n    },\n    paper: {\n        padding: theme.spacing(0),\n        textAlign: 'left',\n        boxShadow: \"none\",\n        color: theme.palette.text.secondary,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nconst JobApplicationDetail = (props) => {\n    const classes = useStyles();\n    const job = props.jobApp || {}\n\n    const [clicked, setClicked] = useState(false)\n\n    const handleRedirect = (id) => {\n        props.handleDeleteJA(id)\n        setClicked(!clicked)\n    }\n\n    if (clicked === true) {\n        return <Redirect to=\"/homepage\" />\n    }\n\n    // if (props.allJAsLoading) {\n    //     return <div> Loading... </div>\n    // }\n\n    return (\n        <div key={job.id} style={{ marginTop: \"40px\" }}>\n            <div className={classes.root}>\n                <Container maxWidth=\"xl\" >\n                    <Typography variant=\"h2\" component=\"div\">\n                        <Grid container spacing={3}>\n                            <Grid item xs={6} >\n                                <Paper className={classes.paper}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\"\n                                        fullWidth InputLabelProps={{ shrink: true, }}\n                                        // helperText=\"Some important text\"\n                                        label=\"Application Title\" \n                                        value={job.application_name} />\n                                </Paper>\n                            </Grid>\n                                  <Grid item xs={6} >\n                                <Paper className={classes.paper}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\"\n                                        fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"Application Status\"\n                                        value={job.status} />\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={6} >\n                                <Paper className={classes.paper}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\"\n                                        fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"Company Name\"\n                                        value={job.company && job.company.name} />\n                                </Paper>\n                            </Grid>\n                      \n                            <Grid item xs={6} >\n                                <Paper className={classes.paper}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\"\n                                        fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"Job Applied Location\"\n                                        value={job.applied_location} />\n                                </Paper>\n                            </Grid>\n\n                            <Grid item xs={6} >\n                                <Paper className={classes.paper}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\"\n                                        fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"Resume Sent Date\"\n                                        value={job.resume_sent} />\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={6} >\n                                <Paper className={classes.paper}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\"\n                                        fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"Job Interest Level (1 - 5)\"\n                                        value={job.interest_level} />\n                                </Paper>\n                            </Grid>\n                            {/* <Grid item xs={6} >\n                        <Paper className={classes.paper}> \n                            <TextField style={{ margin: 1 }} margin=\"normal\"\n                                fullWidth InputLabelProps={{ shrink: true, }}\n                                label=\"Resume\" value={ job.resume } />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={6} >\n                        <Paper className={classes.paper}> \n                            <TextField style={{ margin: 1 }} margin=\"normal\"\n                                fullWidth InputLabelProps={{ shrink: true, }}\n                                label=\"Cover Letter\" value={ job.cover_letter } />\n                        </Paper>\n                    </Grid> */}\n                            <Grid item xs={6} >\n                                <Paper className={classes.paper}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\"\n                                        fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"Contact\"\n                                        value={job.contacts && job.contacts.length > 0 ? `${job.contacts[0].first_name} ${job.contacts[0].last_name}` : \" \"} />\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={6} >\n                                <Paper className={classes.paper}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\"\n                                        fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"Title\"\n                                        value={job.contacts && job.contacts.length > 0 ? job.contacts[0].title : \" \"} />\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={6} >\n                                <Paper className={classes.paper}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\"\n                                        fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"Company Address\"\n                                        value={job.company && `${job.company.street_address}, ${job.company.city}, ${job.company.state} ${job.company.zipcode}`} />\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={6} >\n                                <Paper className={classes.paper}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\"\n                                        fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"Email\"\n                                        value={job.contacts && job.contacts.length > 0 ? job.contacts[0].email : \" \"} />\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={6} >\n                                <Paper className={classes.paper}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\"\n                                        fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"Phone Number\"\n                                        value={job.contacts && job.contacts.length > 0 ? job.contacts[0].phone : \" \"} />\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={6} >\n                                <Paper className={classes.paper}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\"\n                                        fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"Communication Type\"\n                                        value={job.communication_type} />\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={12} >\n                                <Paper className={classes.paper}>\n                                    <InputBase style={{ margin: 1 }} edge=\"start\" fullWidth inputProps={{ 'aria-label': 'naked' }}\n                                        defaultValue=\"Follow Ups:\" />\n                                </Paper>\n                                <FollowUp job={job} commOptions={props.commOptions} addFollowUp={props.addFollowUp} />\n                            </Grid>\n\n                            <Grid item xs={12} >\n                                <Paper className={classes.paper}>\n                                    <InputBase style={{ margin: 1 }} edge=\"start\" fullWidth inputProps={{ 'aria-label': 'naked' }}\n                                        defaultValue=\"Interviews:\" />\n                                </Paper>\n                                <Interview job={job} addInterview={props.addInterview} />\n                            </Grid>\n\n                            <Grid item xs={12} >\n                                <Paper className={classes.paper} style={{ paddingTop: \"50px\" }}>\n                                    <TextField style={{ margin: 1 }} margin=\"normal\" variant=\"outlined\"\n                                        multiline rows={6} fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"General Notes\" value={job.notes} />\n                                </Paper>\n                            </Grid>\n                            <div>\n                                <IconButton aria-label=\"delete\" type=\"submit\" variant=\"contained\" color=\"primary\"\n                                    onClick={() => handleRedirect(job.id)} className={classes.button}  >\n                                    <DeleteIcon fontSize=\"large\" />\n                                </IconButton>\n                                {/* <IconButton aria-label=\"edit\" type=\"submit\" variant=\"contained\" color=\"primary\"\n                                    onClick={console.log} className={classes.button} >\n                                    <EditIcon fontSize=\"large\" />\n                                </IconButton> */}\n                                <Link to=\"/homepage\">\n                                    <IconButton edge=\"end\" aria-label=\"cancel\" type=\"submit\" variant=\"contained\" color=\"primary\"\n                                        className={classes.button}  >\n                                        <CancelIcon fontSize=\"large\" />\n                                    </IconButton>\n                                </Link>\n                            </div>\n                        </Grid>\n                        <div >\n                        </div>\n                        <br />\n                    </Typography>\n                </Container>\n            </div>\n        </div>\n    )\n}\nexport default JobApplicationDetail\n",["51","52"],"/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/Login/Login.js",[],"/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/JobApplication/JobApplication.js",["53","54","55"],"import React, { useState } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nfunction JobApplication(props) {\n   \n    const useStyles = makeStyles((theme) => ({\n        root: {\n          width: '100%',\n          maxWidth: 360,\n          backgroundColor: theme.palette.background.paper,\n        },\n    }));\n      \n    const ListItemLink = (props) => {\n        return <ListItem button component=\"a\" {...props} />;\n    }\n\n    const classes = useStyles();\n    // const [checked, setChecked] = useState([1]);\n\n    // const handleToggle = (value) => () => {\n    //     const currentIndex = checked.indexOf(value);\n    //     const newChecked = [...checked];\n    //         if (currentIndex === -1) {\n    //         newChecked.push(value);\n    //         } else {\n    //         newChecked.splice(currentIndex, 1);\n    //         }\n    //         setChecked(newChecked);\n    // };\n\n    let id = props.jobApp.id \n\n    return (\n        <div className={classes.root} >\n            <List dense className={classes.root}>\n                {[0].map((value) => {\n                    const labelId = `checkbox-list-label-${value}`;\n                    return (\n                    <ListItem key={value} button>\n                        <ListItemLink href={`/job_applications/${id}`}>\n                            <ListItemText   id={labelId} primary={props.jobApp.application_name} \n                                            style={{}} />\n                            </ListItemLink>\n                        {/* <ListItemSecondaryAction>\n                            <Checkbox   edge=\"end\" onChange={handleToggle(value)} disableRipple\n                                        checked={checked.indexOf(value) !== -1} tabIndex={-1}\n                                        inputProps={{ 'aria-labelledby': labelId }} />\n                        </ListItemSecondaryAction> */}\n                    </ListItem>\n                    );\n                })}\n            </List>\n        </div>\n    )\n}\nexport default JobApplication\n","/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/FollowUp/FollowUp.js",["56"],"/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/JobApplication/JobApplications.js",[],"/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/Navbar/Navbar.js",[],"/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/Calendar/Calendar.js",[],"/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/index.js",[],"/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/JobApplicationAdd/JobApplicationAdd.js",[],"/Users/designerjina/Development/code/Mod5/Solo-Project/Code-React-HooksR1/JSCFrontend/JSCFrontend/jscfrontend/src/Components/Interview/Interview.js",["57"],"import React, { useState } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    boxShadow: \"none\",\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: 'left',\n    boxShadow: \"none\",\n    color: theme.palette.text.secondary,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst Interview = (props) => {\n    const classes = useStyles();\n    const job = props.job\n\n    const [ showInt, changeShowInt ] = useState(false)\n    const [interviewDate, setInterviewDate ] = useState(\"\")\n    const [information, setInformation ] = useState(\"\")\n\n    const addInterview = () => {\n        changeShowInt(!showInt)\n    }\n    const handleInterviewDate = (e) => {\n        // console logs 2020-12-10T11:00\n        setInterviewDate(e.target.value)\n    }\n    const handleInformation = (e) => {\n        setInformation(e.target.value)\n    }\n\n    const handleAddInterview = (e) => {\n        e.preventDefault()\n        fetch(\"http://localhost:3000/interviews/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                interview_date: new Date(interviewDate).toString(),\n                information: information,\n                job_application_id: job.id,\n            })\n        })\n        .then(res => res.json()).then(data => props.addInterview(data))\n        changeShowInt(!showInt)\n    }\n\n    // const submitEditInterview = (e) => {\n    //     console.log(e)\n    // }\n\n    return (\n        <div style={{ marginTop: \"40px\"}}>\n            <div className={classes.root}>\n                <Container maxWidth=\"xl\" >\n                <Typography variant=\"h2\" component=\"div\">\n                    <Grid container spacing={3}>\n                        \n                        {  job.interviews && job.interviews.map(interview => { \n                            const time = new Date(interview.interview_date).toLocaleString()\n                            const timeWithoutSeconds = time.replace(/:\\d+ /, \" \")\n                            return <>\n                                <Grid item xs={12} >\n                                    <Paper className={classes.paper}> \n                                        <TextField style={{ margin: 1 }}  margin=\"normal\"\n                                            fullWidth InputLabelProps={{ shrink: true, }}\n                                            label=\"Interview Date\" \n                                            value={ timeWithoutSeconds } />\n                                    </Paper>\n                                </Grid>\n                                <Grid item xs={12} >\n                                    <Paper className={classes.paper}> \n                                        <TextField style={{ margin: 1 }} margin=\"normal\" variant=\"outlined\"\n                                            multiline rows={6} fullWidth InputLabelProps={{ shrink: true, }}\n                                            label=\"Information about the Interview\"\n                                            value={ interview.information } />\n                                    </Paper>\n                                </Grid>   \n                                </> })}\n                    <Grid item xs={12} >\n                        <Paper className={classes.paper}>\n                            <Fab color=\"primary\" aria-label=\"add\" size=\"small\" onClick={ addInterview }>\n                                <AddIcon size=\"small\" fontSize=\"small\" />\n                            </Fab>\n                            {/* <Fab edge=\"end\" color=\"primary\" aria-label=\"edit\" type=\"submit\" size=\"small\" className={classes.button}\n                                onClick={ submitEditInterview } >\n                                <EditIcon size=\"small\" fontSize=\"small\" />\n                            </Fab> */}\n                          </Paper>\n                      </Grid>\n                      </Grid>\n                      \n                    <Grid container spacing={3}> \n                    { showInt === true ? \n                    <>\n                          <form onSubmit={ (e) => handleAddInterview(e) }>\n                            <Grid item xs={12} >\n                                <Paper className={classes.paper}> \n                                    <TextField className={classes.container} noValidate style={{ margin: 1 }} \n                                        margin=\"normal\" type=\"datetime-local\"\n                                        fullWidth InputLabelProps={{ shrink: true, }} \n                                        label=\"Interview Date\" name=\"interview_date\" \n                                        value={ interviewDate } onChange={ handleInterviewDate } />\n                                </Paper>\n                            </Grid>  \n                            <Grid item xs={12} >\n                                <Paper className={classes.paper}> \n                                    <TextField style={{ margin: 1 }} margin=\"normal\" variant=\"outlined\"\n                                        multiline rows={4} fullWidth InputLabelProps={{ shrink: true, }}\n                                        label=\"Information about the Interview\" name=\"information\"\n                                         value={ information } onChange={ handleInformation } />\n                                </Paper>\n                            </Grid> \n                            <IconButton edge=\"start\" aria-label=\"save\" type=\"submit\" variant=\"contained\" color=\"primary\"  \n                                className={classes.button}  >\n                                <SaveIcon fontSize=\"large\" />\n                            </IconButton>\n                            <IconButton edge=\"end\" aria-label=\"cancel\" type=\"submit\" variant=\"contained\" color=\"primary\"  \n                                className={classes.button} onClick={ addInterview } >\n                                    <CancelIcon fontSize=\"large\" />\n                            </IconButton>\n                        </form>\n                        </>\n                    : \"\" }\n                    </Grid> \n            </Typography>\n            </Container>\n            </div>\n        </div>\n    )\n}\n\nexport default Interview\n",{"ruleId":"58","severity":1,"message":"59","line":16,"column":8,"nodeType":"60","messageId":"61","endLine":16,"endColumn":16},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"58","severity":1,"message":"66","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"67","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":31},{"ruleId":"58","severity":1,"message":"68","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":21,"column":8,"nodeType":"60","messageId":"61","endLine":21,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":14,"column":8,"nodeType":"60","messageId":"61","endLine":14,"endColumn":16},"no-unused-vars","'EditIcon' is defined but never used.","Identifier","unusedVar","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"'useState' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation"]